@page "/"
@using Microsoft.AspNetCore.SignalR.Client;
@inject IJSRuntime JSRuntime;

<pre>@asciiVideo</pre>

@if (videoStarted)
{
    <button type="button" class="btn btn-primary" @onclick="StopVideo">Stop</button>
}
else
{
    <button type="button" class="btn btn-primary" @onclick="StartVideo" >Start</button>
}
<canvas id="myCanvas"></canvas>

@code {
    private static Action<string> updateAsciiVideo;
    private string asciiVideo = ":)";
    private bool videoStarted = false;
    private HubConnection hubConnection;

    protected override async Task OnInitializedAsync()
    {
        updateAsciiVideo = (asciiString) => {
            asciiVideo = asciiString;
            StateHasChanged();
        };

        hubConnection = new HubConnectionBuilder()
            .WithUrl("http://localhost:7071/api")
            .WithAutomaticReconnect()
            .Build();
            
        await hubConnection.StartAsync();
    }

    private async Task StartVideo()
    {
        await JSRuntime.InvokeVoidAsync("start", 80, 45, 4);
        videoStarted = true;
    }

    private async Task StopVideo()
    {
        await JSRuntime.InvokeVoidAsync("location.reload");
    }

    [JSInvokable]
    public static void UpdateAsciiVideo(string asciiString)
    {
        if (updateAsciiVideo != null)
        {
            updateAsciiVideo.Invoke(asciiString);
        }
    }
}